@model ECommerceWebApp.Models.CartItem
@{
    ViewData["Title"] = "Add to Cart";
}

<h2>Add to Cart</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="UserId"></label>
        <select asp-for="UserId" class="form-control" asp-items="ViewBag.UserId"></select>
    </div>

    <div class="form-group">
        <label asp-for="ProductId"></label>
        <select asp-for="ProductId" class="form-control" asp-items="ViewBag.ProductId"
                onchange="updateStockInfo(this.value)">
        </select>
        <small id="stockInfo" class="form-text text-muted"></small>
    </div>

    <div class="form-group">
        <label asp-for="Quantity"></label>
        <input asp-for="Quantity" class="form-control" />
    </div>

    <div class="form-group">
        <label>Coupon Code (optional)</label>
        <input name="couponCode" class="form-control" />
    </div>

    <div class="form-check mb-3">
        <input type="checkbox" name="buyNow" class="form-check-input" id="buyNowCheck">
        <label class="form-check-label" for="buyNowCheck">Buy Now</label>
    </div>

    <button type="submit" class="btn btn-primary">Add to Cart</button>
</form>

@section Scripts {
    <script>
        const stockData = @Html.Raw(Json.Serialize(
        ViewBag.ProductStock ?? new Dictionary<string, int>()));

        function updateStockInfo(productId) {
            const stock = stockData[productId];
            document.getElementById("stockInfo").innerText = stock
                ? `Available stock: ${stock}`
                : "Select a product to view stock.";
        }
    </script>
}
