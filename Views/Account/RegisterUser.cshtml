@model ECommerceWebApp.ViewModels.RegisterUserVM

@{
    ViewData["Title"] = "Register User";
}
@section Styles {
    <style>
        input[type="date"]::-webkit-calendar-picker-indicator {
            cursor: pointer;
            filter: invert(0.5);
        }
    </style>
}
<div class="container my-5">
    <div class="card shadow-lg border-0 rounded-3" style="max-width: 800px; margin: auto;">
        <div class="card-header bg-primary text-white text-center py-4 rounded-top">
            <h4 class="mb-0"><i class="bi bi-person-plus-fill me-2"></i> Create Your Account</h4>
        </div>
        <div class="card-body p-5">

            <form id="registerForm" asp-action="RegisterUser" asp-controller="Account" method="post" enctype="multipart/form-data" novalidate>

                <!-- Step 1: Personal Info -->
                <div id="step1" class="form-step" style="position: relative; min-height: 500px;">
                    <h5 class="text-secondary mb-4">Step 1: Personal Information</h5>

                    <div class="row g-4">
                        <div class="col-md-6">
                            <label asp-for="FirstName" class="form-label fw-semibold"></label>
                            <input asp-for="FirstName" class="form-control" required />
                            <span asp-validation-for="FirstName" class="text-danger small"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="LastName" class="form-label fw-semibold"></label>
                            <input asp-for="LastName" class="form-control" required />
                            <span asp-validation-for="LastName" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label fw-semibold">Gender</label>
                            <div>
                                @foreach (var gender in new[] { "Male", "Female", "Other" })
                                {
                                    <div class="form-check form-check-inline">
                                        <input asp-for="Gender" class="form-check-input" type="radio" value="@gender" required />
                                        <label class="form-check-label">@gender</label>
                                    </div>
                                }
                            </div>
                            <span asp-validation-for="Gender" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="DateOfBirth" class="form-label fw-semibold"></label>
                            <div class="input-group">
                                <span class="input-group-text bg-white"><i class="bi bi-calendar-date"></i></span>
                                <input asp-for="DateOfBirth"
                                       class="form-control"
                                       type="date"
                                       max="@DateTime.Now.ToString("yyyy-MM-dd")"
                                       required />
                            </div>
                            <span asp-validation-for="DateOfBirth" class="text-danger small"></span>
                        </div>


                        <div class="col-md-8">
                            <label asp-for="ImageFile" class="form-label fw-semibold"></label>
                            <input asp-for="ImageFile" class="form-control" type="file" accept="image/*" id="ImageFile" />
                            <span asp-validation-for="ImageFile" class="text-danger small"></span>
                        </div>
                        <div class="col-md-4 d-flex align-items-center">
                            <img id="imagePreview" class="rounded border" style="display:none; max-width:100%;" alt="Image Preview" />
                        </div>
                    </div>

                    <div class="step-footer d-flex justify-content-end mt-4 bg-white pt-3"
                         style="position: sticky; bottom: 0; z-index: 5; border-top: 1px solid #eee;">
                        <button type="button" class="btn btn-primary btn-lg px-4" onclick="validateStep(1)">Next <i class="bi bi-arrow-right"></i></button>
                    </div>
                </div>


                <!-- Step 2: Address Info -->
                <div id="step2" class="form-step d-none">
                    <h5 class="text-secondary mb-4">Step 2: Address Details</h5>

                    <div class="row g-4">
                        <div class="col-12">
                            <label asp-for="Address" class="form-label fw-semibold"></label>
                            <textarea asp-for="Address" class="form-control" rows="3" required></textarea>
                            <span asp-validation-for="Address" class="text-danger small"></span>
                        </div>

                        <div class="col-md-4">
                            <label asp-for="CountryId" class="form-label fw-semibold"></label>
                            <select asp-for="CountryId" class="form-select" asp-items="@(new SelectList(Model.Countries, "CountryId", "CountryName"))" required>
                                <option value="">-- Select Country --</option>
                            </select>
                            <span asp-validation-for="CountryId" class="text-danger small"></span>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="StateId" class="form-label fw-semibold"></label>
                            <select asp-for="StateId" class="form-select" required>
                                <option value="">-- Select State --</option>
                            </select>
                            <span asp-validation-for="StateId" class="text-danger small"></span>
                        </div>
                        <div class="col-md-4">
                            <label asp-for="CityId" class="form-label fw-semibold"></label>
                            <select asp-for="CityId" class="form-select" required>
                                <option value="">-- Select City --</option>
                            </select>
                            <span asp-validation-for="CityId" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <button type="button" class="btn btn-secondary btn-lg px-4" onclick="prevStep(2)"><i class="bi bi-arrow-left"></i> Back</button>
                        <button type="button" class="btn btn-primary btn-lg px-4" onclick="validateStep(2)">Next <i class="bi bi-arrow-right"></i></button>
                    </div>
                </div>

                <!-- Step 3: Credentials Info -->
                <div id="step3" class="form-step d-none">
                    <h5 class="text-secondary mb-4">Step 3: Login Credentials</h5>

                    <div class="row g-4">
                        <div class="col-md-6">
                            <label asp-for="Mobile" class="form-label fw-semibold"></label>
                            <input asp-for="Mobile" class="form-control" type="tel" pattern="[0-9]{10}" maxlength="10" required />
                            <span asp-validation-for="Mobile" class="text-danger small"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="Email" class="form-label fw-semibold"></label>
                            <input asp-for="Email" class="form-control" type="email" required />
                            <span asp-validation-for="Email" class="text-danger small"></span>
                        </div>

                        <div class="col-md-6">
                            <label asp-for="Password" class="form-label fw-semibold"></label>
                            <input asp-for="Password" class="form-control" type="password" required />
                            <span asp-validation-for="Password" class="text-danger small"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="ConfirmPassword" class="form-label fw-semibold"></label>
                            <input asp-for="ConfirmPassword" class="form-control" type="password" required />
                            <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <button type="button" class="btn btn-secondary btn-lg px-4" onclick="prevStep(3)"><i class="bi bi-arrow-left"></i> Back</button>
                        <button type="submit" class="btn btn-success btn-lg px-4" id="submitBtn">
                            Register
                            <span id="submitSpinner" class="spinner-border spinner-border-sm d-none ms-2"></span>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
                document.addEventListener("DOMContentLoaded", function () {
            const imageInput = document.getElementById("ImageFile");
            const preview = document.getElementById("imagePreview");

            // Preview uploaded image
            imageInput.addEventListener("change", function () {
                const file = this.files[0];
                if (file && file.type.startsWith("image/")) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        preview.src = e.target.result;
                        preview.style.display = "inline-block";
                    };
                    reader.readAsDataURL(file);
                } else {
                    preview.style.display = "none";
                    preview.src = "";
                }
            });

            // Country → State
            $('#CountryId').change(function () {
                let countryId = $(this).val();
                $('#StateId').empty().append('<option value="">-- Select State --</option>');
                $('#CityId').empty().append('<option value="">-- Select City --</option>');

                if (countryId) {
                    $.get('/Account/GetStates', { countryId }, function (data) {
                        data.forEach(state => {
                            $('#StateId').append(`<option value="${state.stateId}">${state.stateName}</option>`);
                        });
                    });
                }
            });

            // State → City
            $('#StateId').change(function () {
                let stateId = $(this).val();
                $('#CityId').empty().append('<option value="">-- Select City --</option>');

                if (stateId) {
                    $.get('/Account/GetCities', { stateId }, function (data) {
                        data.forEach(city => {
                            $('#CityId').append(`<option value="${city.cityId}">${city.cityName}</option>`);
                        });
                    });
                }
            });

            // Fix register button disabling issue
            $('#registerForm').on('submit', function (e) {
                if (!this.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                    $(this).addClass('was-validated');

                    // Re-enable button if invalid
                    $('#submitBtn').prop('disabled', false);
                    $('#submitSpinner').addClass('d-none');
                    return;
                }

                // Valid → disable button to avoid multiple clicks
                $('#submitBtn').prop('disabled', true);
                $('#submitSpinner').removeClass('d-none');
            });

            // If user changes any input after validation error → re-enable button
            $('#registerForm :input').on('input change', function () {
                $('#submitBtn').prop('disabled', false);
                $('#submitSpinner').addClass('d-none');
            });

            // SweetAlert messages
            @if (TempData["RegistrationSuccess"] != null)
            {
                    <text>Swal.fire('Success', '@TempData["RegistrationSuccess"]', 'success');</text>
            }
            else if (TempData["Error"] != null)
            {
                    <text>Swal.fire('Error', '@TempData["Error"]', 'error');</text>
            }
        });

        // Step validation
                function validateStep(currentStep) {
            let isValid = true;

            // Loop through all required inputs in the step
            $(`#step${currentStep} :input[required]`).each(function () {
                if (!this.checkValidity()) {
                    isValid = false;
                    $(this).addClass('is-invalid');
                } else {
                    $(this).removeClass('is-invalid');
                }

                // Add live validation listener for each field (runs only once)
                if (!$(this).data('live-validation')) {
                    $(this).on('input change', function () {
                        if (this.checkValidity()) {
                            $(this).removeClass('is-invalid');
                        } else {
                            $(this).addClass('is-invalid');
                        }
                    });
                    $(this).data('live-validation', true);
                }
            });

            if (!isValid) {
                Swal.fire('Oops!', 'Please fill all required fields before proceeding.', 'warning');
                return;
            }

            // If valid → go to next step
            nextStep(currentStep);
        }


        // Step navigation
        function nextStep(current) {
            $(`#step${current}`).addClass('d-none');
            $(`#step${current + 1}`).removeClass('d-none');
        }

        function prevStep(current) {
            $(`#step${current}`).addClass('d-none');
            $(`#step${current - 1}`).removeClass('d-none');
        }


    </script>
}
